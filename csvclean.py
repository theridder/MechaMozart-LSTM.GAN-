from os import listdir


def clean_file(lines):
    """
    This function cleans csv files generated by the midicsv program.

    It takes a list of lines, removes any events that are not note
    activations or deactivations, and merges them into one track.
    The output consist of the Header line, a Tempo event, the start of the
    track, the notes, the end of the track, the end of file, and nothing else.
    The convetion of using a Note_on_c with velocity 0 instead of a Note_off_c
    is adopted."""

    output = []
    # Keeps track of what we are looking for
    mode = 0

    for line in lines:
        # Check for header
        if mode == 0:
            if "Header" in line:
                values = line.split()
                # Change mode to single track
                values[3] = "0,"
                # Change amount of expected tracks to 1
                values[4] = "1,"

                output.append(" ".join(values))
                mode = 1
                continue
            else:
                raise Exception("No header at start of file")

        # Scan for track start
        if mode == 1 and "Start_track" in line:
            output.append(line.strip("\n "))
            mode = 2
            continue

        # Add notes and tempo
        if mode == 2 or mode == 3:
            # Technically notes can come before Tempo at time 0
            # Which is why this is inside here
            if "Tempo" in line and mode == 2:
                output.append(line.strip("\n "))
                mode = 3
                continue

            elif "Note_on_c" in line:
                values = line.split()
                # Fix track num
                values[0] = "1,"
                output.append(" ".join(values))

            elif "Note_off_c" in line:
                values = line.split()
                # Fix track num
                values[0] = "1,"
                # Make into v 0 on_c
                values[2] = "Note_on_c,"
                values[-1] = "0"
                output.append(" ".join(values))

    # Sort by tick index
    output.sort(key=lambda x: int(x.split()[1][:-1]))

    # Add ending lines
    last_time = int(output[-1].split()[1][:-1])
    output.append("1, " + str(last_time + 10) + ", End_track")
    output.append("0, 0, End_of_file")

    output = "\n".join(output)

    return output


for filename in listdir("./csv"):
    if filename[0] == ".":
        continue

    in_file = open("./csv/" + filename, "r")
    in_lines = in_file.readlines()

    out_file = open("./csv_clean/" + filename, "w")
    out_file.write(clean_file(in_lines))

    in_file.close()
    out_file.close()
